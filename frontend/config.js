// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è API
const API_CONFIG = {
    BASE_URL: 'http://localhost:8000',
    ENDPOINTS: {
        CHAT: '/api/chat/message',
        HEALTH: '/api/health',
        CLEAR_SESSION: '/api/chat/session'
    }
};

// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Å—Å–∏—è–º–∏
function generateSessionId() {
    const timestamp = Date.now();
    const random = Math.random().toString(36).substr(2, 9);
    return `titanic_${timestamp}_${random}`;
}

function getSessionId() {
    let sessionId = localStorage.getItem('titanic_session_id');
    if (!sessionId) {
        sessionId = generateSessionId();
        localStorage.setItem('titanic_session_id', sessionId);
    }
    return sessionId;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API
async function checkAPIHealth() {
    try {
        const response = await fetch(`${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.HEALTH}`);
        const data = await response.json();
        console.log('‚úÖ API Status:', data);
        return data.status === 'healthy' && data.openai_status === 'configured';
    } catch (error) {
        console.error('‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error);
        return false;
    }
}

// –û—á–∏—Å—Ç–∫–∞ —Å–µ—Å—Å–∏–∏ —á–∞—Ç–∞
async function clearChatSession() {
    try {
        const sessionId = getSessionId();
        const response = await fetch(`${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.CLEAR_SESSION}/${sessionId}`, {
            method: 'DELETE'
        });
        
        if (response.ok) {
            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é
            localStorage.removeItem('titanic_session_id');
            console.log('üóëÔ∏è –°–µ—Å—Å–∏—è —á–∞—Ç–∞ –æ—á–∏—â–µ–Ω–∞');
            return true;
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Å–µ—Å—Å–∏–∏:', error);
    }
    return false;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', async () => {
    const isHealthy = await checkAPIHealth();
    if (!isHealthy) {
        console.warn('‚ö†Ô∏è API –Ω–µ –≥–æ—Ç–æ–≤. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ backend –∑–∞–ø—É—â–µ–Ω.');
    }
});
